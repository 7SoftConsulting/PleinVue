I"aå<h1 id="services-persistants-php-pv">Services Persistants PHP-PV</h1>

<h2 id="pr√©sentation">Pr√©sentation</h2>

<p>Un Service Persistant est un script PHP qui s‚Äôex√©cute en ligne de commande sans s‚Äôarr√™ter.</p>

<p>Il est id√©al pour le traitement des queues, et les connexions persistantes.</p>

<p>Le service persistant est un √©l√©ment d‚Äôapplication. Il h√©rite de la classe <strong>PvServPersist</strong>, et doit r√©√©crire sa m√©thode <strong>ExecuteSession()</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonServicePersistant1</span> <span class="kd">extends</span> <span class="nc">PvServPersist</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$AccepterTousChemins</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">;</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ExecuteSession</span><span class="p">()</span>
<span class="p">{</span>
<span class="k">echo</span> <span class="s2">"Traitement effectue !</span><span class="se">\n</span><span class="s2">"</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Inscrivez le service persistant dans la m√©thode <strong>ChargeServsPersists()</strong> de l‚Äôapplication. Utilisez la m√©thode <strong>InsereServPersist($nom, $serv)</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonApplication1</span> <span class="kd">extends</span> <span class="nc">PvApplication</span>
<span class="p">{</span>
<span class="k">public</span> <span class="k">function</span> <span class="n">ChargeServsPersists</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">InsereServPersist</span><span class="p">(</span><span class="s2">"monServ1"</span><span class="p">,</span> <span class="k">new</span> <span class="nc">MonServicePersistant1</span><span class="p">())</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Chaque 5 secondes, le service persistant ex√©cute les instructions de <strong>ExecuteSession()</strong>.</p>

<p><img src="images/test1_serv_persist.png" alt="R√©sultat" /></p>

<h2 id="propri√©t√©s--m√©thodes-principales">Propri√©t√©s / M√©thodes principales</h2>

<table>
  <thead>
    <tr>
      <th>Fonction</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>$DelaiAttente</td>
      <td>D√©lai (en s√©condes) entre chaque ex√©cution de session. Valeur par d√©faut : 5</td>
    </tr>
    <tr>
      <td>$Arreter</td>
      <td>Valeur bool, pour arr√™ter le script √† la fin d‚Äôune session. Valeur par d√©faut : false.</td>
    </tr>
    <tr>
      <td>$MaxSessions</td>
      <td>Maximum de session √† ex√©cuter, avant d‚Äôarr√™ter le script. Si la valeur est 0, le script ne s‚Äôarr√™tera jamais.</td>
    </tr>
    <tr>
      <td>$TotalSessions</td>
      <td>Total de sessions termin√©es. Ainsi, la valeur sera 1 pour la 2√®me session.</td>
    </tr>
  </tbody>
</table>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonServicePersistant1</span> <span class="kd">extends</span> <span class="nc">PvServPersist</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$AccepterTousChemins</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">;</span>
<span class="k">public</span> <span class="nv">$DelaiAttente</span> <span class="o">=</span> <span class="mi">2</span> <span class="p">;</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ExecuteSession</span><span class="p">()</span>
<span class="p">{</span>
<span class="k">echo</span> <span class="s2">"Traitement effectue !</span><span class="se">\n</span><span class="s2">"</span> <span class="p">;</span>
<span class="c1">// On arrete apres la 4√®me session</span>
<span class="k">if</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">TotalSessions</span> <span class="o">==</span> <span class="mi">3</span><span class="p">)</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">Arreter</span> <span class="o">=</span> <span class="kc">true</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="etats-du-service">Etats du service</h2>

<p>Le service persistant capture les temps entre chaque session, pour red√©marrer en cas de plantage.</p>

<p>Pour le configurer, commencez par d√©clarer le r√©pertoire sauvegarde des √©tats dans l‚Äôapplication. Renseignez la propri√©t√© <strong>$ChemRelRegServsPersists</strong>. Le chemin est relatif au dossier racine de PHP-PV.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonApplication1</span> <span class="kd">extends</span> <span class="nc">PvApplication</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$ChemRelRegServsPersists</span> <span class="o">=</span> <span class="s2">"services/data"</span> <span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Dans ce cas, la structure des dossiers sera :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/php-pv-master
/services
	/data
mon_service.php
</code></pre></div></div>

<p>Ex√©cutez votre script PHP, et vous verrez le fichier Etat g√©n√©r√© dans votre r√©pertoire.</p>

<h2 id="v√©rification-du-service">V√©rification du service</h2>

<p>Un service peut √™tre plant√© dans plusieurs cas :</p>

<ul>
  <li>il est toujours d‚Äôex√©cution</li>
  <li>il sauvegarde r√©guli√®rement son √©tat</li>
</ul>

<p>Pour v√©rifier son fonctionnement, vous pouvez r√©√©crire sa m√©thode <strong>Verifie()</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonServicePersistant1</span> <span class="kd">extends</span> <span class="nc">PvServPersist</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$AccepterTousChemins</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">;</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ExecuteSession</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$bd</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MaBD</span><span class="p">()</span> <span class="p">;</span>
<span class="c1">// Traitement des lignes. Supprimer toutes celles</span>
<span class="c1">// qui ont une date_creation ant√©rieures √† 1 jour</span>
<span class="nv">$bd</span><span class="o">-&gt;</span><span class="nf">RunSql</span><span class="p">(</span><span class="s2">"delete from matable where date_creation &lt; SELECT ADDDATE(NOW(), INTERVAL -1 DAY)"</span><span class="p">)</span> <span class="p">;</span>
<span class="p">}</span>
<span class="k">public</span> <span class="k">function</span> <span class="n">Verifie</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$bd</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MaBD</span><span class="p">()</span> <span class="p">;</span>
<span class="nv">$lgn</span> <span class="o">=</span> <span class="nv">$bd</span><span class="o">-&gt;</span><span class="nf">FetchSqlRow</span><span class="p">(</span><span class="s2">"select count(0) total from matable where date_creation &lt; SELECT ADDDATE(NOW(), INTERVAL -2 DAY)"</span><span class="p">)</span> <span class="p">;</span>
<span class="k">if</span><span class="p">(</span><span class="o">!</span> <span class="nb">is_array</span><span class="p">(</span><span class="nv">$lgn</span><span class="p">)</span> <span class="o">||</span> <span class="nv">$lgn</span><span class="p">[</span><span class="s2">"total"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="c1">// Connexion √† la base de donn√©es √©chou√© ou lignes non trait√©e</span>
<span class="p">{</span>
<span class="k">return</span> <span class="kc">false</span> <span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
<span class="k">return</span> <span class="kc">true</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>L‚Äôapplication cr√©e une t√¢che programm√©e qui ex√©cutera les m√©thodes <strong>Verifie()</strong> des services persistants. Pour l‚Äôactiver, inscrivez la t√¢che avec la m√©thode <strong>InscritCtrlServsPersists($nomTache)</strong>. Personnalisez la avec la propri√©t√© <strong>$CtrlServsPersists</strong>.</p>

<p>Structure des fichiers</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/php-pv-master
/services
	/data
	/verifie.php
mon_service.php
</code></pre></div></div>

<p>D√©claration de l‚Äôapplication dans <strong>/mon_service.php</strong>.</p>
<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonApplication1</span> <span class="kd">extends</span> <span class="nc">PvApplication</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$ChemRelRegServsPersists</span> <span class="o">=</span> <span class="s2">"services/data"</span> <span class="p">;</span>
<span class="k">public</span> <span class="k">function</span> <span class="n">ChargeServsPersists</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">InscritCtrlServsPersists</span><span class="p">(</span><span class="s2">"ctrlServs"</span><span class="p">)</span> <span class="p">;</span>
<span class="c1">// Chemin du script rattach√© √† la tache programm√©e</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">CtrlServsPersists</span><span class="o">-&gt;</span><span class="nc">CheminFichierRelatif</span> <span class="o">=</span> <span class="s2">"services/verifie.php"</span> <span class="p">;</span>
<span class="c1">// Inscrire les autres services...</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">InsereServPersist</span><span class="p">(</span><span class="s2">"monServ1"</span><span class="p">,</span> <span class="k">new</span> <span class="nc">MonServicePersistant1</span><span class="p">())</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="c1">// D√©clarez les autres classes (services persistants etc)</span>
<span class="kd">class</span> <span class="nc">MonServicePersistant1</span> <span class="kd">extends</span> <span class="nc">PvServPersist</span>
</code></pre></div></div>

<p>Contenu du fichier <strong>/services/verifie.php</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="k">include</span> <span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">)</span><span class="mf">.</span><span class="s2">"/../mon_service.php"</span> <span class="p">;</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<h2 id="le-processeur-de-queues">Le processeur de queues</h2>

<p>Ce service persistant automatise le traitement de queues. La classe est <strong>PvProcesseurQueueBase</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">ProcesseurQueue1</span> <span class="kd">extends</span> <span class="nc">PvProcesseurQueueBase</span>
<span class="p">{</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Dans la classe, r√©√©crivez la m√©thode <strong>ChargeElements()</strong>, pour r√©cup√©rer les √©l√©ments en attente.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">ProcesseurQueue1</span> <span class="kd">extends</span> <span class="nc">PvProcesseurQueueBase</span>
<span class="p">{</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ChargeElements</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$bd</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MaBD</span><span class="p">()</span> <span class="p">;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">ElementsBruts</span> <span class="o">=</span> <span class="nv">$bd</span><span class="o">-&gt;</span><span class="nf">FetchSqlRows</span><span class="p">(</span><span class="s2">"select * from matable limit 0, 10"</span><span class="p">)</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Manipulez la propri√©t√© <strong>$ElementActif</strong>-&gt;<strong>ContenuBrut</strong> dans la m√©thode, dans la m√©thode <strong>TraiteElementActif()</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">ProcesseurQueue1</span> <span class="kd">extends</span> <span class="nc">PvProcesseurQueueBase</span>
<span class="p">{</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ChargeElements</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$bd</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MaBD</span><span class="p">()</span> <span class="p">;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">ElementsBruts</span> <span class="o">=</span> <span class="nv">$bd</span><span class="o">-&gt;</span><span class="nf">FetchSqlRows</span><span class="p">(</span><span class="s2">"select * from matable limit 0, 10"</span><span class="p">)</span> <span class="p">;</span>
<span class="p">}</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">TraiteElementActif</span><span class="p">()</span>
<span class="p">{</span>
<span class="k">echo</span> <span class="s2">"Champ 1 : "</span><span class="mf">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">ElementActif</span><span class="o">-&gt;</span><span class="nc">ContenuBrut</span><span class="p">[</span><span class="s2">"champ1"</span><span class="p">]</span><span class="mf">.</span><span class="s2">"</span><span class="se">\n</span><span class="s2">"</span> <span class="p">;</span>
<span class="c1">// Supprimer l'element en base</span>
<span class="nv">$bd</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MaBD</span><span class="p">()</span> <span class="p">;</span>
<span class="nv">$ok</span> <span class="o">=</span> <span class="nv">$bd</span><span class="o">-&gt;</span><span class="nf">RunSql</span><span class="p">(</span><span class="s2">"delete from matable where id=:id"</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s2">"id"</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">ElementActif</span><span class="o">-&gt;</span><span class="nc">ContenuBrut</span><span class="p">[</span><span class="s2">"id"</span><span class="p">]))</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="le-serveur-dappels-socket">Le serveur d‚Äôappels socket</h2>

<h3 id="d√©claration">D√©claration</h3>

<p>Le serveur d‚Äôappels socket installe un serveur socket. Sa classe est <strong>PvServeurAppelsSocket</strong>.</p>

<p>La classe est <strong>PvServeurAppelsSocket</strong>. Renseignez ces propri√©t√©s :</p>

<table>
  <thead>
    <tr>
      <th>Propri√©t√©</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>$Port</td>
      <td>Port d‚Äô√©coute du serveur socket. Par d√©faut, 4401</td>
    </tr>
    <tr>
      <td>$Hote</td>
      <td>Nom d‚Äôhote du serveur socket. Par d√©faut, ‚Äú127.0.0.1‚Äù</td>
    </tr>
    <tr>
      <td>$Scheme</td>
      <td>Protocole : ‚Äútcp‚Äù (par d√©faut) ou ‚Äúudp‚Äù</td>
    </tr>
  </tbody>
</table>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonServeurSocket</span> <span class="kd">extends</span> <span class="nc">PvServeurAppelsSocket</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$Scheme</span> <span class="o">=</span> <span class="s2">"tcp"</span> <span class="p">;</span>
<span class="k">public</span> <span class="nv">$Hote</span> <span class="o">=</span> <span class="s2">"127.0.0.1"</span> <span class="p">;</span>
<span class="k">public</span> <span class="nv">$Port</span> <span class="o">=</span> <span class="mi">4401</span> <span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="m√©thodes-socket">M√©thodes socket</h3>

<p>Le serveur socket contient des m√©thodes, qui correspondent √† la requ√™te re√ßue.</p>

<p>Vous cr√©ez de nouvelles m√©thodes √† partir de la classe <strong>PvMethodeSocketBase</strong>. R√©√©crivez sa m√©thode <strong>ExecuteInstructions()</strong>. A l‚Äôint√©rieur, utilisez les m√©thodes suivantes pour les valeurs retours : <strong>ConfirmeSucces($msg, $resultat=null)</strong> pour le succ√®s sinon <strong>RenseigneErreur($code, $msg, $resultat=null)</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MtdSockAPropos</span> <span class="kd">extends</span> <span class="nc">PvMethodeSocketBase</span>
<span class="p">{</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ExecuteInstructions</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">ConfirmeSucces</span><span class="p">(</span><span class="s2">"OK"</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Apr√®s la d√©claration, inscrivez la dans la classe Serveur socket, dans <strong>ChargeConfig()</strong>. Utilisez <strong>InsereMethode($nom, $mtd)</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonServeurSocket</span> <span class="kd">extends</span> <span class="nc">PvServeurAppelsSocket</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$Port</span> <span class="o">=</span> <span class="mi">4401</span> <span class="p">;</span>
<span class="k">public</span> <span class="k">function</span> <span class="n">ChargeConfig</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">InsereMethode</span><span class="p">(</span><span class="s2">"a_propos"</span><span class="p">,</span> <span class="k">new</span> <span class="nc">MtdSockAPropos</span><span class="p">())</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Le serveur socket contient aussi 3 m√©thodes sp√©cifiques :</p>

<table>
  <thead>
    <tr>
      <th>Propri√©t√©</th>
      <th>M√©thode d‚Äôinitiation</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>$MethodeNonTrouve</td>
      <td>CreeMethodeNonTrouve()</td>
      <td>M√©thode ex√©cut√©e si aucune m√©thode sp√©cifi√©e</td>
    </tr>
    <tr>
      <td>$MethodeTest</td>
      <td>CreeMethodeTest()</td>
      <td>M√©thode de test</td>
    </tr>
    <tr>
      <td>$MethodeVerif</td>
      <td>CreeMethodeVerif()</td>
      <td>V√©rifie si le serveur Socket n‚Äôest pas plant√©</td>
    </tr>
  </tbody>
</table>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MtdSockNonTrouve</span> <span class="kd">extends</span> <span class="nc">PvMethodeSocketBase</span>
<span class="p">{</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ExecuteInstructions</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">RenseigneErreur</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="s2">"La methode que vous avez demandee n'existe pas"</span><span class="p">)</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="kd">class</span> <span class="nc">MonServeurSocket</span> <span class="kd">extends</span> <span class="nc">PvServeurAppelsSocket</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$Port</span> <span class="o">=</span> <span class="mi">4401</span> <span class="p">;</span>
<span class="k">public</span> <span class="k">function</span> <span class="n">CreeMethodeNonTrouve</span><span class="p">()</span>
<span class="p">{</span>
<span class="k">return</span> <span class="k">new</span> <span class="nc">MtdSockNonTrouve</span><span class="p">()</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="tests-de-requ√™te">Tests de requ√™te</h3>

<p>Le serveur socket encode les requ√™tes au format natif PHP. Veuillez changer au format JSON, si vous testez les requ√™tes. Retournez l‚Äôinstance <strong>PvFormatPaquetJSON</strong> dans sa m√©thode <strong>CreeFormatPaquet()</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MonServeurSocket</span> <span class="kd">extends</span> <span class="nc">PvServeurAppelsSocket</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$Port</span> <span class="o">=</span> <span class="mi">4422</span> <span class="p">;</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">CreeFormatPaquet</span><span class="p">()</span>
<span class="p">{</span>
<span class="k">return</span> <span class="k">new</span> <span class="nc">PvFormatPaquetJSON</span><span class="p">()</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>D√©marrez ensuite le serveur socket. Le format des requ√™tes est :</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="nl">nom</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">nom_methode</span><span class="dl">"</span><span class="p">,</span> <span class="nx">args</span> <span class="p">:</span> <span class="p">{</span> <span class="dl">"</span><span class="s2">prop1</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">val1</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">prop2</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">val2</span><span class="dl">"</span> <span class="p">}}</span>
</code></pre></div></div>

<p>Si vous invoquez la m√©thode ‚Äútest‚Äù, vous enverrez :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="nl">nom</span><span class="p">:</span><span class="dl">"</span><span class="s2">test</span><span class="dl">"</span><span class="p">,</span><span class="nx">args</span><span class="p">:{}}</span>
</code></pre></div></div>

<p>Testez avec PHP √† partir des fonctions socket <strong>fsockopen()</strong>‚Ä¶</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nv">$hote</span> <span class="o">=</span> <span class="s1">'127.0.0.1'</span> <span class="p">;</span>
<span class="nv">$port</span> <span class="o">=</span> <span class="mi">4422</span> <span class="p">;</span>
<span class="nv">$fh</span> <span class="o">=</span> <span class="nb">fsockopen</span><span class="p">(</span><span class="s1">'tcp://'</span><span class="mf">.</span><span class="nv">$hote</span><span class="p">,</span> <span class="nv">$port</span><span class="p">)</span> <span class="p">;</span>
<span class="nv">$contenu</span> <span class="o">=</span> <span class="s1">'{nom:"test",args:{}}'</span><span class="mf">.</span><span class="s2">"</span><span class="se">\r\n</span><span class="s2">"</span> <span class="p">;</span>
<span class="nb">fputs</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span> <span class="nv">$contenu</span><span class="p">)</span> <span class="p">;</span>
<span class="nv">$result</span> <span class="o">=</span> <span class="nb">stream_get_contents</span><span class="p">(</span><span class="nv">$fh</span><span class="p">)</span> <span class="p">;</span>
<span class="nb">fclose</span><span class="p">(</span><span class="nv">$fh</span><span class="p">)</span> <span class="p">;</span>
<span class="k">echo</span> <span class="s2">"&lt;p&gt;Contenu : &lt;/p&gt;&lt;pre&gt;"</span><span class="mf">.</span><span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$contenu</span><span class="p">)</span><span class="mf">.</span><span class="s1">'&lt;/pre&gt;'</span> <span class="p">;</span>
<span class="k">echo</span> <span class="s2">"&lt;p&gt;Resultat : &lt;/p&gt;&lt;pre&gt;"</span><span class="mf">.</span><span class="nb">htmlentities</span><span class="p">(</span><span class="nv">$result</span><span class="p">)</span><span class="mf">.</span><span class="s1">'&lt;/pre&gt;'</span> <span class="p">;</span>
</code></pre></div></div>

<h3 id="arguments-de-requ√™te">Arguments de requ√™te</h3>

<p>La m√©thode filtre les arguments re√ßus. Donnez leurs valeurs par d√©faut dans la propri√©t√© <strong>$ArgsParDefaut</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MtdSockInfoClient</span> <span class="kd">extends</span> <span class="nc">PvMethodeSocketBase</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$ArgsParDefaut</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">"code_reference"</span> <span class="o">=&gt;</span> <span class="kc">null</span><span class="p">)</span> <span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Vous acc√©dez aux valeurs re√ßues avec la propri√©t√© <strong>$Args</strong>, disponible dans <strong>ExecuteInstructions()</strong>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MtdSockInfoClient</span> <span class="kd">extends</span> <span class="nc">PvMethodeSocketBase</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$ArgsParDefaut</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">"id"</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">;</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ExecuteInstructions</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$id</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">Args</span><span class="p">[</span><span class="s2">"id"</span><span class="p">]</span> <span class="p">;</span>
<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StdClass</span> <span class="p">;</span>
<span class="nv">$client</span><span class="o">-&gt;</span><span class="n">id</span> <span class="o">=</span> <span class="nv">$id</span> <span class="p">;</span>
<span class="nv">$client</span><span class="o">-&gt;</span><span class="n">nom</span> <span class="o">=</span> <span class="s2">"Client"</span> <span class="p">;</span>
<span class="nv">$client</span><span class="o">-&gt;</span><span class="n">prenom</span> <span class="o">=</span> <span class="s2">"Sans nom"</span> <span class="p">;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">ConfirmeSucces</span><span class="p">(</span><span class="s2">"Client trouve"</span><span class="p">,</span> <span class="nv">$client</span><span class="p">)</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="kd">class</span> <span class="nc">MonServeurSocket1</span> <span class="kd">extends</span> <span class="nc">PvServeurAppelsSocket</span>
<span class="p">{</span>
<span class="k">public</span> <span class="nv">$AccepterTousChemins</span> <span class="o">=</span> <span class="mi">1</span> <span class="p">;</span>
<span class="k">public</span> <span class="nv">$Port</span> <span class="o">=</span> <span class="mi">4422</span> <span class="p">;</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">CreeFormatPaquet</span><span class="p">()</span>
<span class="p">{</span>
<span class="k">return</span> <span class="k">new</span> <span class="nc">PvFormatPaquetJSON</span><span class="p">()</span> <span class="p">;</span>
<span class="p">}</span>
<span class="k">public</span> <span class="k">function</span> <span class="n">ChargeConfig</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">InsereMethode</span><span class="p">(</span><span class="s2">"info_client"</span><span class="p">,</span> <span class="k">new</span> <span class="nc">MtdSockInfoClient</span><span class="p">())</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><img src="images/args_socket.png" alt="R√©sultat" /></p>

<h3 id="m√©thodes--propri√©t√©s-principales">M√©thodes / Propri√©t√©s principales</h3>

<p>La m√©thode poss√®de ces propri√©t√©s :</p>

<table>
  <thead>
    <tr>
      <th>Propri√©t√©</th>
      <th>M√©thode d‚Äôinitiation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>PrepareExecution(&amp; $serveur, $nom, $args=array())</td>
      <td>Assigne le serveur socket √† la m√©thode lors de l‚Äôappel. Vous devez garder l‚Äôinstruction <strong>parent::PrepareExecution($serveur, $nom, $args)</strong> √† l‚Äôint√©rieur</td>
    </tr>
    <tr>
      <td>TermineExecution()</td>
      <td>Ex√©cut√©e apr√®s <strong>ExecuteInstructions()</strong>. Gardez <strong>parent::TermineExecution()</strong> √† l‚Äôint√©rieur.</td>
    </tr>
    <tr>
      <td>$Serveur</td>
      <td>Serveur socket qui a re√ßu l‚Äôappel</td>
    </tr>
    <tr>
      <td>$NomAppel</td>
      <td>Nom de la m√©thode appel√©e</td>
    </tr>
    <tr>
      <td>ErreurTrouvee()</td>
      <td>Verifie si le retour d√©fini est une erreur</td>
    </tr>
    <tr>
      <td>EstSucces()</td>
      <td>Verifie si le retour d√©fini est un succ√®s</td>
    </tr>
  </tbody>
</table>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">MtdSockInfoClient</span> <span class="kd">extends</span> <span class="nc">PvMethodeSocketBase</span>
<span class="p">{</span>
<span class="k">protected</span> <span class="nv">$BdSupport</span> <span class="p">;</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">PrepareExecution</span><span class="p">(</span><span class="o">&amp;</span> <span class="nv">$serveur</span><span class="p">,</span> <span class="nv">$nom</span><span class="p">,</span> <span class="nv">$args</span><span class="o">=</span><span class="k">array</span><span class="p">())</span>
<span class="p">{</span>
<span class="k">parent</span><span class="o">::</span><span class="nf">PrepareExecution</span><span class="p">(</span><span class="nv">$serveur</span><span class="p">,</span> <span class="nv">$nom</span><span class="p">,</span> <span class="nv">$args</span><span class="p">)</span> <span class="p">;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">BdSupport</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MaBD</span><span class="p">()</span> <span class="p">;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">BdSupport</span><span class="o">-&gt;</span><span class="nc">AutoCloseConnection</span> <span class="o">=</span> <span class="kc">false</span> <span class="p">;</span>
<span class="k">if</span><span class="p">(</span><span class="o">!</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">BdSupport</span><span class="o">-&gt;</span><span class="nf">InitConnection</span><span class="p">())</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">RenseigneErreur</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">BdSupport</span><span class="o">-&gt;</span><span class="nc">ConnectionException</span><span class="p">)</span> <span class="p">;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">BdSupport</span> <span class="o">=</span> <span class="kc">null</span> <span class="p">;</span>
<span class="p">}</span>
<span class="k">else</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">ConfirmeSucces</span><span class="p">(</span><span class="s2">"Connexion etablie"</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">ExecuteInstructions</span><span class="p">()</span>
<span class="p">{</span>
<span class="k">if</span><span class="p">(</span><span class="o">!</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">EstSucces</span><span class="p">())</span>
<span class="p">{</span>
<span class="k">return</span> <span class="p">;</span>
<span class="p">}</span>
<span class="k">protected</span> <span class="k">function</span> <span class="n">TermineExecution</span><span class="p">()</span>
<span class="p">{</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="nc">BdSupport</span><span class="o">-&gt;</span><span class="nf">FinalConnection</span><span class="p">()</span> <span class="p">;</span>
<span class="k">parent</span><span class="o">::</span><span class="nf">TermineExecution</span><span class="p">()</span> <span class="p">;</span>
<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
:ET